{
  "swagger": "2.0",
  "info": {
    "title": "Api Documentation",
    "description": "This is an example Koa API that provides end poins for authentication and Video Metadata's",
    "version": "1.0.0"
  },
  "host": "3.138.202.116:5000//api",
  "schemes": ["http"],
  "paths": {
    "/login": {
      "post": {
        "summary": "Authenticate a user",
        "description": "This endpoint allows users generate a token so they can use other end points ",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Username and password to authenticate",
            "required": true,
            "schema": { "$ref": "#/definitions/LoginRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/LoginResponse" }
          },
          "400": { "$ref": "#/responses/400" },
          "401": { "$ref": "#/responses/401" },
          "404": { "$ref": "#/responses/404" },
          "500": { "$ref": "#/responses/500" }
        }
      }
    },
    "/signup": {
      "post": {
        "summary": "Signup  a new  user",
        "description": "This endpoint allows users generate a token so they can use other end points user interface",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "firstName,lastName,email and password for Signup a new user",
            "required": true,
            "schema": { "$ref": "#/definitions/SignupRequest" }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/SignupResponse" }
          },
          "400": { "$ref": "#/responses/400" },
          "401": { "$ref": "#/responses/401" },
          "404": { "$ref": "#/responses/404" },
          "500": { "$ref": "#/responses/500" }
        }
      }
    },
    "/videos": {
      "get": {
        "summary": "With a valid Token Get all Videos",
        "description": "This endpoint allows users to get All Videos Available",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "ratio",
            "in": "query",

            "description": "If Aspect Ratio specified get Videos with this ratio",
            "required": false,

            "type": "array",
            "items": {
              "type": "string",
              "enum": ["0:0", "0:1", "0:2"]
            },
            "default": "0:1",
            "collectionFormat": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": { "$ref": "#/definitions/VideoResponse" }
            }
          },
          "400": { "$ref": "#/responses/400" },
          "401": { "$ref": "#/responses/401" },
          "404": { "$ref": "#/responses/404" },
          "500": { "$ref": "#/responses/500" }
        }
      }
    },

    "/videos/{id}": {
      "get": {
        "summary": "With a valid Token Get the specified Video with populated Resuls",
        "description": "This endpoint allows users to get a single Video",
        "produces": ["application/json"],

        "parameters": [
          {
            "name": "id",
            "in": "path",

            "description": "Video Id required for this path",
            "required": true,
            "type": "string",

            "collectionFormat": "single"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": { "$ref": "#/definitions/VideoIdResponse" }
          },
          "400": { "$ref": "#/responses/400" },
          "401": { "$ref": "#/responses/401" },
          "404": { "$ref": "#/responses/404" },
          "500": { "$ref": "#/responses/500" }
        }
      }
    }
  },
  "responses": {
    "400": {
      "description": "Bad Request",
      "schema": { "$ref": "#/definitions/Error" }
    },
    "401": {
      "description": "Unauthorized",
      "schema": { "$ref": "#/definitions/Error" }
    },
    "404": {
      "description": "Unauthorized",
      "schema": { "$ref": "#/definitions/Error" }
    },
    "500": {
      "description": "Internal Server Error",
      "schema": { "$ref": "#/definitions/Error" }
    }
  },
  "definitions": {
    "VideoRequest": {
      "type": "object"
    },
    "VideoResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "author": { "type": "string", "example": "23emfsd33" },
            "title": { "type": "string", "example": "video.mp4" },
            "source": {
              "type": "string",
              "example": "https://www.getfunnyvidoes.com/1213/fun.mp4"
            },
            "date": {
              "type": "string",
              "example": "2005"
            },
            "ratio": {
              "type": "string",
              "example": "0:1"
            },
            "extension": {
              "type": "string",
              "example": "mp4"
            },
            "details": {
              "type": "object",
              "properties": {
                "streams": {
                  "type": "array",
                  "items": {
                    "index": { "type": "number", "example": 1 },
                    "codec_name": { "type": "string", "example": "audio" }
                  }
                },
                "format": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string",
                      "example": "hellovideo.mp4"
                    },

                    "format_name": { "type": "string", "example": "3gp" },

                    "duration": { "type": "number", "example": 10.23 }
                  }
                }
              }
            }
          }
        }
      }
    },
    "VideoIdRequest": {
      "type": "object",
      "required": ["id"],
      "properties": {
        "id": { "type": "string", "example": "2jn3ereeröleö343l" }
      }
    },
    "VideoIdResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",

          "properties": {
            "title": { "type": "string", "example": "video.mp4" },
            "source": {
              "type": "string",
              "example": "https://www.getfunnyvidoes.com/1213/fun.mp4"
            },
            "author": {
              "type": "object",
              "properties": {
                "firstName": {
                  "$ref": "#/definitions/SignupRequest/properties/firstName"
                },
                "lastName": {
                  "$ref": "#/definitions/SignupRequest/properties/lastName"
                },
                "email": {
                  "$ref": "#/definitions/SignupRequest/properties/email"
                }
              }
            },
            "date": {
              "type": "string",
              "example": "2005"
            },
            "ratio": {
              "type": "string",
              "example": "0:1"
            },
            "extension": {
              "type": "string",
              "example": "mp4"
            },
            "details": {
              "type": "object",
              "properties": {
                "streams": {
                  "type": "array",
                  "items": {
                    "index": { "type": "number", "example": 1 },
                    "codec_name": { "type": "string", "example": "audio" }
                  }
                },
                "format": {
                  "type": "object",
                  "properties": {
                    "filename": {
                      "type": "string",
                      "example": "hellovideo.mp4"
                    },

                    "format_name": { "type": "string", "example": "3gp" },

                    "duration": { "type": "number", "example": 10.23 }
                  }
                }
              }
            }
          }
        }
      }
    },
    "LoginRequest": {
      "type": "object",
      "required": ["username", "password"],
      "properties": {
        "username": { "type": "string", "example": "username@email.com" },
        "password": { "type": "string", "example": "secret" }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "dfjghjk34h5kjhdfkjdfgklj76l8k"
            }
          }
        }
      }
    },
    "SignupRequest": {
      "type": "object",
      "required": ["firstName", "lastName", "email", "password", ""],
      "properties": {
        "firstName": { "type": "string", "example": "first" },
        "lastName": { "type": "string", "example": "last" },

        "email": { "type": "string", "example": "username@email.com" },

        "password": { "type": "string", "example": "secret" }
      }
    },
    "SignupResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "token": {
              "type": "string",
              "example": "dfjghjk34h5kjhdfkjdfgklj76l8k"
            },
            "firstName": {
              "$ref": "#/definitions/SignupRequest/properties/firstName"
            },
            "lastName": {
              "$ref": "#/definitions/SignupRequest/properties/lastName"
            },
            "email": { "$ref": "#/definitions/SignupRequest/properties/email" }
          }
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": { "error": { "type": "string" } }
        }
      }
    }
  }
}
